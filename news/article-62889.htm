<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteriawindows.github.io/news/article-62889.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题</title>
        <meta name="description" content="一、前言  本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例： https://juejin.cn/post/7091132240574283813 Compl" />
        <link rel="icon" href="/assets/website/img/hysteriawindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HysteriaWindows免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteriawindows.github.io/news/article-62889.htm" />
    <meta property="og:site_name" content="HysteriaWindows免费节点官网" />
    <meta property="og:title" content="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题" />
    <meta property="og:image" content="https://hysteriawindows.github.io/uploads/20240814/4f58dd16f7c8a6b57000c6b193b7449b.webp" />
        <meta property="og:release_date" content="2025-02-25T05:00:46" />
    <meta property="og:updated_time" content="2025-02-25T05:00:46" />
        <meta property="og:description" content="一、前言  本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例： https://juejin.cn/post/7091132240574283813 Compl" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/fontawesome/css/all.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/animate-css/animate.css">
    <!-- main css -->
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/style.css">
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-W3GH5FWSVJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-W3GH5FWSVJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--================Header Menu Area =================-->
    <header class="header_area">
        <div class="main_menu">
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="container">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <a class="navbar-brand logo_h" href="/">
                                        <span>Hysteria Windows</span>
                                        </a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse offset" id="navbarSupportedContent">
                        <ul class="nav navbar-nav menu_nav ml-auto">
                                                        <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <!--================Header Menu Area =================-->
    <!--================Hero Banner Area Start =================-->
    <section class="hero-banner d-flex align-items-center">
        <div class="container text-center">
            <h1>【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题</h1>
            <nav aria-label="breadcrumb" class="banner-breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <!--================Hero Banner Area End =================-->
    <!--================About  Area =================-->
    <section class="statics-area area-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h3 id="一前言">一、前言</h3> <blockquote> <p>本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://juejin.cn/post/7091132240574283813"  target="_blank" rel="nofollow">https://juejin.cn/post/7091132240574283813</a></p> <p>CompletableFuture已经提供了串行、并行等常用异步编排的方案，但在细节上还是有许多不足，比如回调方面，编排复杂顺序方面，就捉襟见肘了。</p> <p> 之前我有关注过Gitee上star量还不错的一款开源工具AsyncTool：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/jd-platform-opensource/asyncTool"  target="_blank" rel="nofollow">https://gitee.com/jd-platform-opensource/asyncTool</a></p> <p>是由京东零售的高级工程师编写的，提供了非常丰富的异步编排功能，并且经过了京东内部的测试，是对CompletableFuture的封装和补足，试用了一下挺不错。</p> </blockquote> <p></p> <h3 id="二用法">二、用法</h3> <h4 id="1引入">1、引入</h4> <blockquote> <p>1）、不推荐：maven引入，这个比较坑，客观原因经常会导致依赖下载不下来，不推荐使用；</p> <p>2）、推荐：直接下载源码，因为代码量很少，就几个核心类和测试类。</p> </blockquote> <p>如下图所示，把下载的源码拷贝进来即可，核心代码放到java目录里面，测试代码放到test目录里面。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ca3e17fc58e713e414dc9482b2482163.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2编写worker">2、编写worker</h4> <blockquote> <p>1）、worker是AsyncTool中的一个思想，专门来处理任务的，比如查询、rpc调用等耗时操作，一个任务就是一个worker；</p> <p>2）、构建worker十分简单，只需要实现IWorker和ICallback接口即可；</p> <p>3）、这里，我们承接上一篇文章的案例，分别创建查询二十四节气和查询星座的worker；</p> <p>4）、其中begin方法是构建开始时会执行，result方法是获取到结果后会执行，action方法就是处理具体任务的地方，一般业务就在这里编写，defaultValue方法提供超时异常时返回的默认值。</p> </blockquote> <p>1）、二十四节气worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * &lt;p&gt;  * 二十四节气worker  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class TwentyFourWorker implements IWorker&lt;String, String&gt;, ICallback&lt;String, String&gt; {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/jieqi/query";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult&lt;String&gt; workResult) {       if (success) {          System.out.println("callback twentyFourWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback twentyFourWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询二十四节气     */    @Override    public String action(String object, Map&lt;String, WorkerWrapper&gt; allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[二十四节气]&gt;&gt;&gt;&gt; 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "twentyFourWorker";    } }</code></pre> <p></p> <p>2）、星座worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * &lt;p&gt;  * 星座worker  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class ConstellationWorker implements IWorker&lt;String, String&gt;, ICallback&lt;String, String&gt; {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/astro/all";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult&lt;String&gt; workResult) {       if (success) {          System.out.println("callback constellationWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback constellationWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询星座     */    @Override    public String action(String object, Map&lt;String, WorkerWrapper&gt; allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟异常       //    int i = 1/0;        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[星座]&gt;&gt;&gt;&gt; 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "constellationWorker";    } }</code></pre> <p></p> <h4 id="3异步编排">3、异步编排</h4> <blockquote> <p>1）、新建一个AsyncToolService，在里面进行worker的声明、构建、编排；</p> <p>2）、Async.beginWork就是执行异步任务，参数分别为超时时间和worker，其中超时时间可以自己设短一点看效果；</p> <p>3）、最后封装结果返回即可，这里为演示案例节省时间直接用map返回。</p> </blockquote> <pre><code class="language-java">package com.example.async.service;  import com.example.async.worker.ConstellationWorker; import com.example.async.worker.TwentyFourWorker; import com.jd.platform.async.executor.Async; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Service;  import java.util.HashMap; import java.util.Map; import java.util.concurrent.ExecutionException;  /**  * &lt;p&gt;  * AsyncTools服务  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 17:56  */ @Service @Slf4j public class AsyncToolService {     /**     * 异步返回结果     *     ---- 方式：AsyncTool并行处理     *     * @return 结果     */    public Map&lt;String, Object&gt; queryAsync() throws ExecutionException, InterruptedException {       // 声明worker       TwentyFourWorker twentyFourWorker = new TwentyFourWorker();       ConstellationWorker constellationWorker = new ConstellationWorker();        // 构建二十四节气worker       WorkerWrapper&lt;String, String&gt; twentyFourWrapper =  new WorkerWrapper.Builder&lt;String, String&gt;()             .worker(twentyFourWorker)             .callback(twentyFourWorker)             .param("0")             .build();        // 构建星座worker       WorkerWrapper&lt;String, String&gt; constellationWrapper =  new WorkerWrapper.Builder&lt;String, String&gt;()             .worker(constellationWorker)             .callback(constellationWorker)             .param("1")             .build();        // 开始工作，这里设定超时时间10s，测试时可以设短一点看效果。       Async.beginWork(10000, twentyFourWrapper, constellationWrapper);        // 打印当前线程数       log.debug("----------------- 当前线程数 ----------------");       log.debug(Async.getThreadCount());        // 打印结果       log.debug("----------------- 二十四节气 ----------------");       log.debug("结果: {}", twentyFourWrapper.getWorkResult());       log.debug("----------------- 星座 ----------------");       log.debug("结果: {}", constellationWrapper.getWorkResult());        // 返回       Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();       map.put("twentyFour", twentyFourWrapper.getWorkResult());       map.put("constellation", constellationWrapper.getWorkResult());        // 关闭(spring web类应用不用关闭，否则第二次执行会报线程池异常。)       // Async.shutDown();        return map;    } }</code></pre> <p></p> <h4 id="4测试效果">4、测试效果</h4> <blockquote> <p>上一篇的案例有演示同步执行的结果，在10秒左右，而CompletableFuture的结果在5秒多点。<br /> 这里测试后发现，AsyncTool的结果也是5秒左右，和CompletableFuture差不多，但AsyncTool提供的编排更丰富。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d699a76cdd4d441a7d489324f46974b4.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>我们把其中一个星座worker的任务耗时调大，模拟一下超时的效果。可以发现，AsyncTool直接返回了我们上面defaultValue方法中设置的默认值。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9f74bcae09ac4c9cfa0d228c3fd83d37.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="三常用编排">三、常用编排</h3> <blockquote> <p>AsyncTool其实提供了很丰富的异步编排方式，包括较复杂的编排，但以我呆过的中小企业为例，几乎用不到复杂编排，最常用的的还是并行以及串行+并行。</p> </blockquote> <p>AsyncTool的QuickStart.md已经做了简洁的说明：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/jd-platform-opensource/asyncTool/blob/master/QuickStart.md"  target="_blank" rel="nofollow">https://gitee.com/jd-platform-opensource/asyncTool/blob/master/QuickStart.md</a></p> <p>1）、任务并行</p> <blockquote> <p>也就是本篇我们案例使用的编排，是我个人平时最常用的一种。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/bdfe3bb17aeb6778e94705eecd68243c.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>2）、串行+并行</p> <blockquote> <p>这种其实就是通过next()来做串行和并行的衔接，有些场景也会用到。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/633213bf5bee70aa59352623a9d82865.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>3）、依赖其他任务的结果</p> <blockquote> <p>这也是很常见的场景，B任务依赖A任务的结果来实现业务，最后返回。</p> <p>AsyncTool也提供了很方便的方式：</p> <p>1）、在service中构建worker-A时设置一个id名称；</p> <p>2）、你可以发现worker的action方法第二个入参是个map，里面就是所有的wrapper；</p> <p>3）、在worker-B的action方法中get这个id来获取wrapper从而拿到A的结果即可。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/baab5f2aea14e1f9b40e94ef9bcbd95e.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/05b9d6ae9cad9dfb7223d8c7e8473cf6.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="四避坑经验">四、避坑经验</h3> <h4 id="1勿关闭线程池">1、勿关闭线程池</h4> <blockquote> <p>AsyncTool提供了很多测试类，里面包含了所有编排方式，可以一一查看并验证，但使用过程中要注意一点，如果是spring-web项目，比如springboot，不需要手动Async.shutdown()处理，否则会执行一次后就关闭线程池了，这是不少人直接拷贝test代码疏忽的地方。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/333b6d7ea65f324bb9530383215f5c9d.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2自定义线程池">2、自定义线程池</h4> <blockquote> <p>这个问题可以在AsyncTool的issue中看到相关讨论，作者君是根据京东零售的业务来决定使用什么线程池的，他们使用的默认线程池就是newCachedThreadPool，无限制长度的线程池，且具备复用特性，按照作者君的说法，因为京东的场景多数为低耗时（10ms）高并发，瞬间冲击的场景，所以最适合这种线程池。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a2494b093490a74a86859e8f5a7412e2.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e873cb7fbba1cc357229af1bf6bc1a10.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>而根据我的经验，不同公司的业务和项目都不同，中小企业往往依靠企事业单位生存，对接第三方厂家较多，rpc接口耗时往往较长且不可控，不符合京东零售低耗时高并发的特点，直接使用Integer.MAX_VALUE的无限制核心线程数的方式不太合适。</p> <p>我建议中小企业使用自定义线程池，根据自身硬件水平和压测结果调整最终核心线程数和任务队列长度，确定合适的拒绝策略，比如直接拒绝或走主线程，这样会比较稳妥。</p> </blockquote> <p></p> <h3 id="五示例代码">五、示例代码</h3> <blockquote> <p>完整示例代码提供给大家，里面有我的极速数据API的key，每天100次免费调用，省去注册账号，先到先测，慢点就只能等明天了哦。</p> <p>链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pan.baidu.com/doc/share/kJyph2LX076okHVWv38tlw-159275174957933"  target="_blank" rel="nofollow">https://pan.baidu.com/doc/share/kJyph2LX076okHVWv38tlw-159275174957933</a></p> <p>提取码：yqms</p> </blockquote> <p></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-62888.htm">java实现选择排序（思路与实现）</a></p>
                                        <p>下一个：<a href="/news/article-63479.htm">猫轻微抓伤有一点渗血要***吗多少钱（猫咪抓伤渗血）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38139.htm" title="生物燃料颗粒加工可行性报告（生物燃料颗粒生产流程）">生物燃料颗粒加工可行性报告（生物燃料颗粒生产流程）</a></li>
                        <li class="py-2"><a href="/news/article-56515.htm" title=""></a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-27-hysteria-node-github.htm" title="「1月27日」最高速度20.5M/S，2025年Hysteria每天更新免费机场订阅节点链接">「1月27日」最高速度20.5M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-9-today-hysteria-node.htm" title="「2月9日」最高速度19.7M/S，2025年Hysteria每天更新免费机场订阅节点链接">「2月9日」最高速度19.7M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-47074.htm" title="前端需要了解的颜色模型，RGB、HSL和HSV_在线工具">前端需要了解的颜色模型，RGB、HSL和HSV_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-2-free-node-subscribe-links.htm" title="「2月2日」最高速度19.7M/S，2025年Hysteria每天更新免费机场订阅节点链接">「2月2日」最高速度19.7M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-latest-hysteria-node.htm" title="「1月6日」最高速度20.6M/S，2025年Hysteria每天更新免费机场订阅节点链接">「1月6日」最高速度20.6M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-62888.htm" title="java实现选择排序（思路与实现）">java实现选择排序（思路与实现）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-20-hysteria-node-github.htm" title="「12月20日」最高速度18.1M/S，2024年Hysteria每天更新免费机场订阅节点链接">「12月20日」最高速度18.1M/S，2024年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-27180.htm" title="延吉市安泰宠物医院地址电话（延吉安泰动物医院怎么样）">延吉市安泰宠物医院地址电话（延吉安泰动物医院怎么样）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">82</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--================About Area End =================-->
        <!-- ================ start footer Area ================= -->
    <footer class="footer-area">
        <div class="container">
            <div class="footer-bottom row align-items-center text-center text-lg-left no-gutters">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="footer-text m-0 col-lg-8 col-md-12">
                    HysteriaWindows免费节点官网 版权所有 Powered by WordPress
                </p>
                <div class="col-lg-4 col-md-12 text-center text-lg-right footer-social">
                    <a href="#"><i class="ti-facebook"></i></a>
                    <a href="#"><i class="ti-twitter-alt"></i></a>
                    <a href="#"><i class="ti-dribbble"></i></a>
                    <a href="#"><i class="ti-linkedin"></i></a>
                </div>
            </div>
        </div>
    </footer>
    <!-- ================ End footer Area ================= -->
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="/assets/website/js/frontend/hysteriawindows/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/popper.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/owl-carousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/contact.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/theme.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>