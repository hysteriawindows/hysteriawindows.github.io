<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteriawindows.github.io/news/article-67833.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>【java】兴唐第二十一节（LinkedList和泛型）</title>
        <meta name="description" content="LinkedList知识点 1、实现了Iterable接口的类具有迭代功能。 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与Linked" />
        <link rel="icon" href="/assets/website/img/hysteriawindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HysteriaWindows免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteriawindows.github.io/news/article-67833.htm" />
    <meta property="og:site_name" content="HysteriaWindows免费节点官网" />
    <meta property="og:title" content="【java】兴唐第二十一节（LinkedList和泛型）" />
    <meta property="og:image" content="https://hysteriawindows.github.io/uploads/20240814/3f0b48ff93e564e1374cd12de570efe7.webp" />
        <meta property="og:release_date" content="2025-03-05T11:12:11" />
    <meta property="og:updated_time" content="2025-03-05T11:12:11" />
        <meta property="og:description" content="LinkedList知识点 1、实现了Iterable接口的类具有迭代功能。 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与Linked" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【java】兴唐第二十一节（LinkedList和泛型）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/fontawesome/css/all.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/hysteriawindows/animate-css/animate.css">
    <!-- main css -->
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/style.css">
    <link rel="stylesheet" href="/assets/website/css/hysteriawindows/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-W3GH5FWSVJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-W3GH5FWSVJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--================Header Menu Area =================-->
    <header class="header_area">
        <div class="main_menu">
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="container">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <a class="navbar-brand logo_h" href="/">
                                        <span>Hysteria Windows</span>
                                        </a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse offset" id="navbarSupportedContent">
                        <ul class="nav navbar-nav menu_nav ml-auto">
                                                        <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <!--================Header Menu Area =================-->
    <!--================Hero Banner Area Start =================-->
    <section class="hero-banner d-flex align-items-center">
        <div class="container text-center">
            <h1>【java】兴唐第二十一节（LinkedList和泛型）</h1>
            <nav aria-label="breadcrumb" class="banner-breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <!--================Hero Banner Area End =================-->
    <!--================About  Area =================-->
    <section class="statics-area area-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><font size="3" color="black"></font><br /><font size="5" color="black">LinkedList知识点</font><br /> 1、实现了Iterable接口的类具有迭代功能。<br /> 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与LinkedList(链表)<br /><font size="3" color="green">算了不多说了，上图吧</font><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/2326f80e034cf968a654fb4d9436a19c.jpg" alt="【java】兴唐第二十一节（LinkedList和泛型）"></p> <p>3、ArrayList是一个可变数组（当存储数据长度大于当前数组长度时，会重新声明一个数组，将原来的数据拷贝过来。）</p> <p>4、LinkedList的第一个元素的Pre值一定为nell ,可以用来判断是不是第一个元素</p> <p>5、ArrayList元素地址是连续的，LinkedList的地址不连续。</p> <p>6、ArrayList是数组的线性的数据结构，使用连续的内存单元存储数据元素，对元素的遍历速度比较快LinkedList在遍历集合元素方面比较慢，因为需要寻找下一个元素的地址。<br /> LinkedList是双向链表数据结构，前一个元素储存了后一个元素的地址，后一个元素记录了前一个元素的地址。当添加过删除元素时比较快。因为ArrayList需要移动删除或添加元素后的所有元素。</p> <p><font size="3" color="green">7、留下的疑问：什么是线程安全？等到讲完多线程后再来做补充，使用多线程的目的是为了使程序跑的更快一点</font></p> <p>7、Linkedlist删除元素时直接将要删除元素的前一个元素的next指向要删除元素后一个元的pre即可。</p> <p>8、向指定位置添加元素<br /> 代码实现</p> <pre><code class="prism language-java">stus<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"孙悟空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>9、迭代器的使用<br /> （1）如果只是打印的话则不需要将数据转为字符串的形式<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====&gt;"</span> <span class="token operator">+</span> iter<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> </code></pre> <p>(2)如果想对数据进行处理，则需要将数据转化为String类型，有两种方法<br /> 方法一：<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			String n <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====&gt;"</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>	 		<span class="token punctuation">}</span> </code></pre> <p>方法二：<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			String n <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====&gt;"</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> </code></pre> <p><font size="3" color="red">注：任何的对象和字符串拼接都会变成字符串</font></p> <p>10、LinkedList新增的方法<br /> LinkedList除了实现List提供的抽象方法外，还增加了一些方法：</p> <ol> <li>void addFirst(Object o) 将指定数据元素插入此集合的开头,原来元素（如果有）后移；</li> <li>void addLast(Object o) 将指定数据元素插入此集合的结尾</li> <li>Object getFirst() 返回此集合的第一个数据元素</li> <li>Object getLast() 返回此集合的最后一个数据元素</li> <li>Object removeFirst() 移除并返回集合表的第一个数据元素</li> <li>Object removeLast() 移除并返回集合表的最后一个数据元素<br /><font size="3" color="red">新增的六个方法都要记住</font> </li> </ol> <p><font size="5" color="black">泛型</font><br /> 1、实例化对象时的用法<br /> 代码实现：</p> <pre><code class="prism language-java">List<span class="token generics function"><span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	 </code></pre> <p>2、引用类型<br /> 例：</p> <pre><code class="prism language-java">list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span> stu<span class="token punctuation">.</span><span class="token function">setStuNo</span><span class="token punctuation">(</span><span class="token string">"2019"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>由于add的两个stu地址相同，所以打印时输出的内容是一样的。</p> <p><font size="5" color="black">LinkedList的源码分析</font></p> <p>1、</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>E<span class="token punctuation">&gt;</span></span>  </code></pre> <p>E指的是元素，表示ArrayList盛放元素的类型</p> <p>2、最后一个元素如果为null则说明该集合是空的。</p> <p><font size="3" color="green">小作业：将LinkFirst和LinkList自己写一下</font></p> <p><font size="5" color="black">ArrayList的源码分析</font><br /><font size="3" color="black"></font><br /> 1、其中有一个有参的构造方法</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token function">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> </code></pre> <p>很重要！因为它可以在实例化ArrayList时指定默认的长度。（无参的构造方法初始化一个长度为10的数组（默认值为10）数组）<br /> 避免一些不必要的空间扩容和元素复制。</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token function">ArrayList</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token operator">&gt;</span> c<span class="token punctuation">)</span> </code></pre> <p>2、以上代码 中？部分表示的是表示的输入的类型必须为ArrrayList的类或其子类，作用是将集合中的元素添加到新new的ArrayList当中。<br /><font size="3" color="green">3、疑问：这一步干什么用的？</font><br /> if (elementData.getClass() != Object[].class)</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-67183.htm">领养宠物合同怎么写（领养宠物的合同）</a></p>
                                        <p>下一个：<a href="/news/article-67835.htm">torch报错TypeError: can&#8217;t convert CUDA tensor to numpy. Use Tensor.cpu() to copy the tensor</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-45571.htm" title="58同城宠物领养怎么发布信息（58同城如何发布领养宠物消息）">58同城宠物领养怎么发布信息（58同城如何发布领养宠物消息）</a></li>
                        <li class="py-2"><a href="/news/article-40613.htm" title="宠物粮食代理需要多少钱一个月 宠物粮食代理需要多少钱一个月呢">宠物粮食代理需要多少钱一个月 宠物粮食代理需要多少钱一个月呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-node-share.htm" title="「1月4日」最高速度21.1M/S，2025年Hysteria每天更新免费机场订阅节点链接">「1月4日」最高速度21.1M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-latest-hysteria-node.htm" title="「3月1日」最高速度22M/S，2025年Hysteria每天更新免费机场订阅节点链接">「3月1日」最高速度22M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-high-speed-nodes.htm" title="「1月17日」最高速度19.1M/S，2025年Hysteria每天更新免费机场订阅节点链接">「1月17日」最高速度19.1M/S，2025年Hysteria每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-50569.htm" title="Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel">Spring Cloud Alibaba入门实践(十九)-Feign整合Sentinel</a></li>
                        <li class="py-2"><a href="/news/article-48035.htm" title="分布式一致性协议之Paxos算法">分布式一致性协议之Paxos算法</a></li>
                        <li class="py-2"><a href="/news/article-51114.htm" title="兽药排名前五十名 兽药排名前五十名有哪些">兽药排名前五十名 兽药排名前五十名有哪些</a></li>
                        <li class="py-2"><a href="/news/article-45085.htm" title="宠物领养市场经济可行性分析报告怎么写（宠物领养数据）">宠物领养市场经济可行性分析报告怎么写（宠物领养数据）</a></li>
                        <li class="py-2"><a href="/news/article-49041.htm" title="动物打完疫苗需要注意什么事项和事项（动物打疫苗后多久能杀了吃）">动物打完疫苗需要注意什么事项和事项（动物打疫苗后多久能杀了吃）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">82</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--================About Area End =================-->
        <!-- ================ start footer Area ================= -->
    <footer class="footer-area">
        <div class="container">
            <div class="footer-bottom row align-items-center text-center text-lg-left no-gutters">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="footer-text m-0 col-lg-8 col-md-12">
                    HysteriaWindows免费节点官网 版权所有 Powered by WordPress
                </p>
                <div class="col-lg-4 col-md-12 text-center text-lg-right footer-social">
                    <a href="#"><i class="ti-facebook"></i></a>
                    <a href="#"><i class="ti-twitter-alt"></i></a>
                    <a href="#"><i class="ti-dribbble"></i></a>
                    <a href="#"><i class="ti-linkedin"></i></a>
                </div>
            </div>
        </div>
    </footer>
    <!-- ================ End footer Area ================= -->
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="/assets/website/js/frontend/hysteriawindows/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/popper.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/owl-carousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/contact.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/hysteriawindows/theme.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>